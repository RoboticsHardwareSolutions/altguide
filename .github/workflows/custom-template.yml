name: Custom Template Builder

on:
  workflow_dispatch:
    inputs:
      project_name:
        description: 'Project name (optional - will customize template)'
        required: false
        type: string
      include_workflows:
        description: 'Include GitHub Actions workflows'
        required: false
        default: true
        type: boolean
      include_docs:
        description: 'Include documentation templates'
        required: false
        default: true
        type: boolean
      template_format:
        description: 'Output format'
        required: true
        default: 'zip'
        type: choice
        options:
        - zip
        - tar.gz
        - both

jobs:
  build-custom-template:
    runs-on: self-hosted
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          sparse-checkout: |
            files
            altguide.md
          sparse-checkout-cone-mode: false
        
      - name: Get timestamp
        id: timestamp
        run: echo "timestamp=$(date +'%Y%m%d-%H%M%S')" >> $GITHUB_OUTPUT
        
      - name: Set template name
        id: template_name
        run: |
          if [ -n "${{ inputs.project_name }}" ]; then
            echo "name=${{ inputs.project_name }}-template" >> $GITHUB_OUTPUT
          else
            echo "name=rhs-altium-template-${{ steps.timestamp.outputs.timestamp }}" >> $GITHUB_OUTPUT
          fi
          
      - name: Create template directory
        run: |
          mkdir -p "${{ steps.template_name.outputs.name }}"
          
      - name: Copy core files
        run: |
          # Always copy basic PCB files
          cp files/PCB.PcbDoc "${{ steps.template_name.outputs.name }}/"
          cp files/Job.OutJob "${{ steps.template_name.outputs.name }}/"
          cp files/board_options.txt "${{ steps.template_name.outputs.name }}/"
          cp files/ext_bom.csv "${{ steps.template_name.outputs.name }}/"
          
          # Copy gitignore
          if [ -f files/.gitignore.gitignore ]; then
            cp files/.gitignore.gitignore "${{ steps.template_name.outputs.name }}/.gitignore"
          fi
          
      - name: Copy GitHub workflows
        if: inputs.include_workflows == true
        run: |
          mkdir -p "${{ steps.template_name.outputs.name }}/.github"
          cp -r files/.github/* "${{ steps.template_name.outputs.name }}/.github/"
          
      - name: Copy documentation
        if: inputs.include_docs == true
        run: |
          cp altguide.md "${{ steps.template_name.outputs.name }}/PROJECT_SETUP_GUIDE.md"
          
      - name: Create template info file
        run: |
          cat > "${{ steps.template_name.outputs.name }}/TEMPLATE_INFO.txt" << EOF
          RHS Altium Project Template
          ===========================
          
          Generated: ${{ steps.timestamp.outputs.timestamp }}
          Template Name: ${{ steps.template_name.outputs.name }}
          
          Included Components:
          - Core PCB files: âœ“
          - GitHub workflows: ${{ inputs.include_workflows == 'true' && 'âœ“' || 'âœ—' }}
          - Documentation: ${{ inputs.include_docs == 'true' && 'âœ“' || 'âœ—' }}
          
          Project Name: ${{ inputs.project_name || 'Not specified' }}
          EOF
          
      - name: Create ZIP archive
        if: inputs.template_format == 'zip' || inputs.template_format == 'both'
        run: |
          zip -r "${{ steps.template_name.outputs.name }}.zip" "${{ steps.template_name.outputs.name }}/"
          
      - name: Create TAR.GZ archive  
        if: inputs.template_format == 'tar.gz' || inputs.template_format == 'both'
        run: |
          tar -czf "${{ steps.template_name.outputs.name }}.tar.gz" "${{ steps.template_name.outputs.name }}/"
          
      - name: Upload ZIP artifact
        if: inputs.template_format == 'zip' || inputs.template_format == 'both'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.template_name.outputs.name }}-zip
          path: ${{ steps.template_name.outputs.name }}.zip
          retention-days: 1
          
      - name: Upload TAR.GZ artifact
        if: inputs.template_format == 'tar.gz' || inputs.template_format == 'both'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.template_name.outputs.name }}-targz
          path: ${{ steps.template_name.outputs.name }}.tar.gz
          retention-days: 1
          
      - name: Generate summary
        run: |
          echo "## ðŸŽ‰ Custom Template Built Successfully!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Template Name:** \`${{ steps.template_name.outputs.name }}\`" >> $GITHUB_STEP_SUMMARY
          echo "**Generated:** ${{ steps.timestamp.outputs.timestamp }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### ðŸ“‹ Configuration:" >> $GITHUB_STEP_SUMMARY
          echo "- **Project Name:** ${{ inputs.project_name || 'Generic template' }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Include Workflows:** ${{ inputs.include_workflows }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Include Docs:** ${{ inputs.include_docs }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Format:** ${{ inputs.template_format }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### ðŸ“¥ Download:" >> $GITHUB_STEP_SUMMARY
          echo "**GitHub Artifacts:** Check the 'Artifacts' section below to download templates" >> $GITHUB_STEP_SUMMARY
